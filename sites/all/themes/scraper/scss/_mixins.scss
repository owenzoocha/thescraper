// Mixins
@mixin underline($speed, $color) {
  display: inline-block;
  &::after {
    content: '';
    display: block;
    margin: 0 auto;
    background-color: $color;
    height: 0.5rem;
    width: 0;
    transition: $speed;
  }
}

@mixin nav-underline($color){
  content: '';
  height: 3px;
  position: absolute;
  width: 100%;
  background-color: $color;
  bottom: 0;
  left: 0;
}

@mixin big-btn(){
  text-transform: uppercase;
  font-size: 18px;
  border-radius: 25px!important;
}

@mixin blocks(){
  box-shadow: 0 2px 0 rgba(0,0,0,0.03);
  background-color: white;
  border: 1px solid #e7eaeb;
  border-bottom-color: #ccd1d4;
  border-radius: 4px;
  margin-bottom: 20px;
  padding: 15px;
}

@mixin tags(){
  ul {
    margin-bottom: 10px;
    padding: 0;
    li {
      display: inline-block;
      min-width: 10px;
      padding: 3px 7px;
      font-size: 12px;
      color: $white;
      line-height: 1;
      vertical-align: baseline;
      white-space: nowrap;
      text-align: center;
      background-color: $hb-dark;
      border-radius: 10px;
    }
  }
}

@mixin vh-center(){
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin letter-and-font(){
  letter-spacing: 1px;
  font-weight: 300;
}

@mixin fa-background($iconcode){
  content: $iconcode;
  font-family: FontAwesome;
  font-style: normal;
  font-weight: normal;
  text-decoration: inherit;
  /*--adjust as necessary--*/
  color: #fff;
  position: absolute;
}

@mixin middle-border-with-space($color){
  &:before,
  &:after {
    background-color: $color;
    content: "";
    display: inline-block;
    height: 1px;
    position: relative;
    vertical-align: middle;
    width: 50%;
  }
  &:before {
    right: 0.5em;
    margin-left: -50%;
  }
  &:after {
    left: 0.5em;
    margin-right: -50%;
  }
}

@mixin pressed-border-bottom(){
  border-bottom: 1px solid $light-grey-border;
  box-shadow: 0px 1px 0px #fff;
}

@mixin pressed-border-top(){
  border-top: 1px solid $light-grey-border;
  box-shadow: 0px -1px 0px #fff;
}

//  arrow-link()
//
// Appends an arrow to a link
// @param direction    "left" or "right" - adds an arrow  to that side
// (defaults to right)

@mixin arrow-link($direction: "right") {
  @if ($direction == "right") {
    &::after {
      content: '>';
      display: inline-block;
      margin-left: 0.5rem;
    }
  } @else if ($direction == "left") {
    &::before {
      content: '<';
      display: inline-block;
      margin-right: 0.5rem;
    }
  }
}

// rem-floor()
// used to round elements down to 2 decimal places
//
// Use case is for Bootstrap, where converting from px to rems
// creates some interesting calculated values.
@function rem-floor($value) {
  $tempVal: floor($value * 100);
  @return $tempVal / 100;
}


// rem-ceil()
// used to round elements down to 2 decimal places
//
// Use case is for Bootstrap, where converting from px to rems
// creates some interesting calculated values.
@function rem-ceil($value) {
  $tempVal: ceil($value * 100);
  @return $tempVal / 100;
}
